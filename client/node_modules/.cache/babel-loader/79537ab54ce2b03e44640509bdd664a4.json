{"ast":null,"code":"var _jsxFileName = \"/Users/aaronang/Documents/GitHub/bostonhack-x-budsa-hackathon/react-todo-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-underscore-dangle */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get('http://127.0.0.1:5000/');\n      setTasks(result.data);\n    };\n\n    fetchData();\n  }, []); // Add task\n\n  const addTask = async task => {\n    // Update backend\n    await axios.post('http://127.0.0.1:5000/', {\n      text: task.text,\n      reminder: task.reminder\n    }); // GET new data\n\n    const result = await axios.get('http://127.0.0.1:5000/');\n    setTasks(result.data);\n  }; // Delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task._ID !== id)); // Update backend\n\n    axios.delete(`http://127.0.0.1:5000/${id}`);\n  }; // Toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task._ID === id ? { ...task,\n      reminder: !task.reminder\n    } : task)); // Update backend\n\n    const task = tasks.find(_ref => {\n      let {\n        _ID\n      } = _ref;\n      return _ID === id;\n    });\n    axios.put(`http://127.0.0.1:5000/${id}`, {\n      text: task.text,\n      reminder: !task.reminder\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 28\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aaronang/Documents/GitHub/bostonhack-x-budsa-hackathon/react-todo-app/client/src/App.js"],"names":["React","useState","useEffect","axios","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","fetchData","result","get","data","addTask","task","post","text","reminder","deleteTask","id","filter","_ID","delete","toggleReminder","map","find","put","length"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get('http://127.0.0.1:5000/');\n      setTasks(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  // Add task\n  const addTask = async (task) => {\n    // Update backend\n    await axios.post('http://127.0.0.1:5000/', { text: task.text, reminder: task.reminder });\n    // GET new data\n    const result = await axios.get('http://127.0.0.1:5000/');\n    setTasks(result.data);\n  };\n\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task._ID !== id));\n    // Update backend\n    axios.delete(`http://127.0.0.1:5000/${id}`);\n  };\n\n  // Toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => (task._ID === id ? { ...task, reminder: !task.reminder } : task)));\n\n    // Update backend\n    const task = tasks.find(({ _ID }) => _ID === id);\n    axios.put(`http://127.0.0.1:5000/${id}`, { text: task.text, reminder: !task.reminder });\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No Tasks To Show')}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}