{"ast":null,"code":"var _jsxFileName = \"/Users/aaronang/Documents/H4I/react-task-tracker/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch('/tasks').then(res => res.json().then(data => setTasks(data)));\n  }, []); // add task\n\n  const addTask = async task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    const res = await fetch(\"/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTask)\n    });\n\n    if (res.ok) {\n      console.log(\"response worked!\");\n    }\n  }; // delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aaronang/Documents/H4I/react-task-tracker/client/src/App.js"],"names":["Header","Tasks","AddTask","useState","useEffect","App","showAddTask","setShowAddTask","tasks","setTasks","fetch","then","res","json","data","addTask","task","id","Math","floor","random","newTask","method","headers","body","JSON","stringify","ok","console","log","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAqBC,GAAG,IACtBA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBG,IAAI,IAClBL,QAAQ,CAACK,IAAD,CADV,CADF;AAGC,GAJM,EAIJ,EAJI,CAAT,CAJa,CAUb;;AACA,QAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9B,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAEJ,MAAAA,EAAF;AAAM,SAAGD;AAAT,KAAhB;AACA,UAAMJ,GAAG,GAAG,MAAMF,KAAK,CAAC,QAAD,EAAW;AAChCY,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFuB;AAKhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAL0B,KAAX,CAAvB;;AAQA,QAAIT,GAAG,CAACe,EAAR,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAED;AACF,GAfD,CAXa,CA4Bb;;;AACA,QAAMC,UAAU,GAAIb,EAAD,IAAQ;AACzBR,IAAAA,QAAQ,CAACD,KAAK,CAACuB,MAAN,CAAcf,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CA7Ba,CAiCb;;;AACA,QAAMe,cAAc,GAAIf,EAAD,IAAQ;AAC7BR,IAAAA,QAAQ,CAACD,KAAK,CAACyB,GAAN,CAAWjB,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWkB,MAAAA,QAAQ,EAAE,CAAClB,IAAI,CAACkB;AAA3B,KAAjB,GAAyDlB,IAA7E,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMT,cAAc,CAAC,CAACD,WAAF;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGGP,KAAK,CAAC2B,MAAN,GAAe,CAAf,gBAAoB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE3B,KAAd;AAAqB,MAAA,QAAQ,EAAEsB,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAApB,GAAgG,kBAHnG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7CQ3B,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState, useEffect } from \"react\"\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    fetch('/tasks').then(res => \n      res.json().then(data => \n        setTasks(data)))\n    }, [])\n\n  // add task\n  const addTask = async (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    const res = await fetch(\"/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTask)\n    })\n\n    if (res.ok) {\n      console.log(\"response worked!\")\n      \n    }\n  }\n\n  // delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No Tasks To Show')}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}